/**
 * 
 */
package com.rs.game.world.entity.player.content.clues.impl;

import com.rs.game.item.Item;
import com.rs.utility.Utils;

import lombok.Getter;

/**
 * @author ReverendDread
 * Sep 29, 2018
 */
public enum EasyTable {
	//misc
	ZAMORAK_PAGE1(6, 3831, 1, 3),
	ZAMORAK_PAGE2(6, 3832, 1, 3),
	ZAMORAK_PAGE3(6, 3833, 1, 3),
	ZAMORAK_PAGE4(6, 3834, 1, 3),
	GUTHIX_PAGE1(6, 3835, 1, 3),
	GUTHIX_PAGE2(6, 3836, 1, 3),
	GUTHIX_PAGE3(6, 3837, 1, 3),
	GUTHIX_PAGE4(6, 3838, 1, 3),
	SARADOMIN_PAGE1(6, 3827, 1, 3),
	SARADOMIN_PAGE2(6, 3828, 1, 3),
	SARADOMIN_PAGE3(6, 3829, 1, 3),
	SARADOMIN_PAGE4(6, 3830, 1, 3),
	ARMADYL_PAGE1(6, 19604, 1, 3),
	ARMADYL_PAGE2(6, 19605, 1, 3),
	ARMADYL_PAGE3(6, 19606, 1, 3),
	ARMADYL_PAGE4(6, 19607, 1, 3),
	BANDOS_PAGE1(6, 19600, 1, 3),
	BANDOS_PAGE2(6, 19601, 1, 3),
	BANDOS_PAGE3(6, 19602, 1, 3),
	BANDOS_PAGE4(6, 19603, 1, 3),
	ANCIENT_PAGE1(6, 19608, 1, 3),
	ANCIENT_PAGE2(6, 19609, 1, 3),
	ANCIENT_PAGE3(6, 19610, 1, 3),
	ANCIENT_PAGE4(6, 19611, 1, 3),
	PURPLEFIRELIGHTER(6, 10326, 1, 3),
	REDFIRELIGHTER(6, 7329, 1, 3),
	GREENFIRELIGHTER(6, 7330, 1, 3),
	BLUEFIRELIGHTER(6, 7331, 1, 3),
	WHITEFIRELIGHTER(6, 10327, 1, 3),
	SARADOMINARROWS(6, 19152, 20, 100),
	GUTHIXARROWS(6, 19157, 20, 100),
	ZAMORAKARROWS(6, 19162, 20, 100),
	MEERKATPOUCHES(6, 19623, 1, 5),
	FETCHCASKETSCROLLS(6, 19621, 10, 30),
	MISCTELEPORT(6, 19477, 1, 10),
	LUMBERYARDTELEPORT(6, 19480, 1, 10),
	BANDITCAMPTELEPORT(6, 19476, 1, 10),
	PLAIRTELEPORT(6, 19478, 1, 10),
	TAIBOWTELEPORT(6, 19479, 1, 10),
	COINS(6, 995, 2500, 50000),
	BISCUITS(6, 19467, 2, 27),
	PURPLESWEETS(6, 10476, 2, 27),
	//common
	AIRRUNE(6, 556, 150, 150),
	WATERRUNE(6, 555, 150, 150),
	FIRERUNE(6, 554, 150, 150),
	EATTHRUNE(6, 557, 150, 150),
	PUREESSENCE(6, 7937, 150, 150),
	BLACKCROSSBOW(6, 13081, 1, 1),
	STAFFOFAIR(6, 1381, 1, 1),
	STAFFOFWATER(6, 1383, 1, 1),
	STAFFOFEARTH(6, 1385, 1, 1),
	STAFFOFFIRE(6, 1387, 1, 1),
	MITHRILARROW(6, 888, 40, 40),
	BLACKBOLTS(6, 13083, 33, 33),
	AIRTALISMAN(6, 1438, 1, 1),
	FIRETALISMAN(6, 1442, 1, 1),
	WATERTALISMAN(6, 1444, 1, 1),
	EARTHTALISMAN(6, 1440, 1, 1),
	MITHRILLONGSWORD(6, 1299, 1, 1),
	MITHRIL2HSWORD(6, 1315, 1, 1),
	MITHRILPLATELEGS(6, 1071, 1, 1),
	MITHRILPLATESKIRT(6, 1085, 1, 1),
	MITHRILPLATEBODY(6, 1121, 1, 1),
	MITHRILFULLHELM(6, 1159, 1, 1),
	MITHRILKITESHIELD(6, 1197, 1, 1),
	OAKPLANK(6, 8779, 20, 20),
	LAWRUNES(6, 563, 20, 20),
	NATURERUNES(6, 561, 20, 20),
	HARDLEATHER(6, 1744, 10, 10),
	//uncommon4
	//rare2
	WILLOWCOMP(2, 10280, 1, 1),
	YEWCOMP(2, 10282, 1, 1),
	MAGICCOMP(2, 10284, 1, 1),
	BLACKPLATEBODYT(2, 2583, 1, 1),
	BLACKPLATELEGST(2, 2585, 1, 1),
	BLACKFULLHELMT(2, 2587, 1, 1),
	BLACKITET(2, 2589, 1, 1),
	BLACKPLATEBODYG(2, 2591, 1, 1),
	BLACKPLATELEGS(2, 2593, 1, 1),
	BLACKFULLHELMG(2, 2595, 1, 1),
	BLACKITEG(2, 2597, 1, 1),
	BLUEBERET(2, 2633, 1, 1),
	BLACKBERET(2, 2635, 1, 1),
	WHITEBERET(2, 2637, 1, 1),
	HIGHWAYMANMASK(2, 2631, 1, 1),
	WIZARDROBEG(2, 7390, 1, 1),
	WIZARDROBET(2, 7392, 1, 1),
	WIZARDHATG(2, 7394, 1, 1),
	WIZARDHATT(2, 7396, 1, 1),
	WIZARDROBEBOTTOMSG(2, 7386, 1, 1),
	WIZARDROBEBOTTOMST(2, 7388, 1, 1),
	STUDDEDBODYG(2, 7362, 1, 1),
	STUDDEDBODYT(2, 7364, 1, 1),
	STUDDEDCHATSG(2, 7366, 1, 1),
	STUDDEDCHAPST(2, 7368, 1, 1),
	GREENELEGANTSHIRT(2, 10412, 1, 1),
	GREENELEGANTLEGS(2, 10414, 1, 1),
	BLUEELEGANTSHIRT(2, 10406, 1, 1),
	BLUEELEGANTLEGS(2, 10410, 1, 1),
	BLUEELEGANTSHIRTT(2, 10428, 1, 1),
	BLUEELEGANTSKIRT(2, 10430, 1, 1),
	GREENELEGANTSHIRTT(2, 10432, 1, 1),
	GREENELEGANTSKIRT(2, 10434, 1, 1),
	BOBSHIRT1(2, 10316, 1, 1),
	BOBSHIRT2(2, 10318, 1, 1),
	BOBSHIRT3(2, 10320, 1, 1),
	BOBSHIRT4(2, 10322, 1, 1),
	BOBSHIRT5(2, 10324, 1, 1),
	FLAREDTROUSERS(2, 10394, 1, 1),
	SLEEPINGCAP(2, 10398, 1, 1),
	PANTALOONS(2, 10396, 1, 1),
	SRADOMINROBETOP(2, 10458, 1, 1),
	SARADOMINROBELEGS(2, 10464, 1, 1),
	GUTHIXROBETOP(2, 10462, 1, 1),
	GUTHIXROBELEGS(2, 10466, 1, 1),
	ZAMORAKROBETOP(2, 10460, 1, 1),
	ZAMORAKROBELEGS(2, 10468, 1, 1),
	AMULETOFMAGICT(2, 10366, 1 ,1),
	BLACKCANE(2, 13095, 1 ,1),
	SPIKEDHELMET(2, 13105, 1 ,1),
	//very rare1
	;
	
	@Getter private int id, min, max;
	@Getter private double weight;
	
	private static final EasyTable[] VALUES = values();
	
	private EasyTable(double weight, int id, int min, int max) {
		this.weight = weight;
		this.id = id;
		this.min = min;
	}
	
	public static Item roll() {
		double total_weight = 0.0D;
		for (EasyTable table : VALUES) {
			total_weight += table.getWeight();
		}
		double random = Math.random() * total_weight;
		double weight = 0.0D;
		for (EasyTable table : VALUES) {
			weight += table.getWeight();
			if (weight >= random) {
				return new Item(table.getId(), Utils.random(table.getMin(), table.getMax()));
			}
		}
		return null;
	}

}
